import{r as g}from"./app-vO2dIs3l.js";let y={};const c=e=>{if(!e||!e.query&&!e.mergeQuery)return"";const r=e.query??e.mergeQuery,o=e.mergeQuery!==void 0,s=t=>t===!0?"1":t===!1?"0":t.toString(),u=new URLSearchParams(o&&typeof window<"u"?window.location.search:"");for(const t in r){if(r[t]===void 0||r[t]===null){u.delete(t);continue}if(Array.isArray(r[t]))u.has(`${t}[]`)&&u.delete(`${t}[]`),r[t].forEach(a=>{u.append(`${t}[]`,a.toString())});else if(typeof r[t]=="object"){u.forEach((a,f)=>{f.startsWith(`${t}[`)&&u.delete(f)});for(const a in r[t])typeof r[t][a]>"u"||["string","number","boolean"].includes(typeof r[t][a])&&u.set(`${t}[${a}]`,s(r[t][a]))}else u.set(t,s(r[t]))}const h=u.toString();return h.length>0?`?${h}`:""},D=e=>{const r={...e??{}};for(const o in y)r[o]===void 0&&y[o]!==void 0&&(r[o]=y[o]);return r},n=e=>({url:n.url(e),method:"get"});n.definition={methods:["get","head"],url:"/login"};n.url=e=>n.definition.url+c(e);n.get=e=>({url:n.url(e),method:"get"});n.head=e=>({url:n.url(e),method:"head"});const w=e=>({action:n.url(e),method:"get"});w.get=e=>({action:n.url(e),method:"get"});w.head=e=>({action:n.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});n.form=w;const m=e=>({url:m.url(e),method:"post"});m.definition={methods:["post"],url:"/logout"};m.url=e=>m.definition.url+c(e);m.post=e=>({url:m.url(e),method:"post"});const p=e=>({action:m.url(e),method:"post"});p.post=e=>({action:m.url(e),method:"post"});m.form=p;const d=e=>({url:d.url(e),method:"get"});d.definition={methods:["get","head"],url:"/"};d.url=e=>d.definition.url+c(e);d.get=e=>({url:d.url(e),method:"get"});d.head=e=>({url:d.url(e),method:"head"});const Q=e=>({action:d.url(e),method:"get"});Q.get=e=>({action:d.url(e),method:"get"});Q.head=e=>({action:d.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});d.form=Q;const l=e=>({url:l.url(e),method:"get"});l.definition={methods:["get","head"],url:"/dashboard"};l.url=e=>l.definition.url+c(e);l.get=e=>({url:l.url(e),method:"get"});l.head=e=>({url:l.url(e),method:"head"});const b=e=>({action:l.url(e),method:"get"});b.get=e=>({action:l.url(e),method:"get"});b.head=e=>({action:l.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});l.form=b;const i=e=>({url:i.url(e),method:"get"});i.definition={methods:["get","head"],url:"/register"};i.url=e=>i.definition.url+c(e);i.get=e=>({url:i.url(e),method:"get"});i.head=e=>({url:i.url(e),method:"head"});const q=e=>({action:i.url(e),method:"get"});q.get=e=>({action:i.url(e),method:"get"});q.head=e=>({action:i.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});i.form=q;/**
 * @license lucide-react v0.475.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const k=e=>e.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase(),E=(...e)=>e.filter((r,o,s)=>!!r&&r.trim()!==""&&s.indexOf(r)===o).join(" ").trim();/**
 * @license lucide-react v0.475.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */var x={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};/**
 * @license lucide-react v0.475.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const v=g.forwardRef(({color:e="currentColor",size:r=24,strokeWidth:o=2,absoluteStrokeWidth:s,className:u="",children:h,iconNode:t,...a},f)=>g.createElement("svg",{ref:f,...x,width:r,height:r,stroke:e,strokeWidth:s?Number(o)*24/Number(r):o,className:E("lucide",u),...a},[...t.map(([$,A])=>g.createElement($,A)),...Array.isArray(h)?h:[h]]));/**
 * @license lucide-react v0.475.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const F=(e,r)=>{const o=g.forwardRef(({className:s,...u},h)=>g.createElement(v,{ref:h,iconNode:r,className:E(`lucide-${k(e)}`,s),...u}));return o.displayName=`${e}`,o};export{D as a,m as b,F as c,l as d,d as h,n as l,c as q,i as r};
